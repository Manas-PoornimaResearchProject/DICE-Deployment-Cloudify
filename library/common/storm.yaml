# Apache Storm

node_types:

  dice.components.storm.Base:
    derived_from: dice.chef.SoftwareComponent
    properties:
      # TODO: Document additional requirements that need to be in place before
      # using this functionality.
      # NOTE to developers: This property is not defined on root DICE types
      # because not all types support monitoring and specifying thing on a
      # more granular level gives blueprint validator additional leverage
      # when performing checks.
      monitoring:
        type: dice.types.MonitoringConfig
      configure_runlist:
        default:
          - recipe[dice_common::default]
          - recipe[apt::default]
          - recipe[java::default]
          - recipe[storm::default]
          - recipe[storm::configure]
          - recipe[dmon_agent::default]
          - recipe[dmon_agent::collectd]
      chef_attributes:
        default:
          java:
            jdk_version:    { get_input: java_version }
            install_flavor: { get_input: java_flavor  }

  dice.components.storm.Worker:
    derived_from: dice.components.storm.Base
    properties:
      start_runlist:
        default:
          - recipe[storm::start_supervisor]
          - recipe[dmon_agent::storm]

  dice.components.storm.Nimbus:
    derived_from: dice.components.storm.Base
    properties:
      start_runlist:
        default:
          - recipe[storm::start_nimbus]
          - recipe[storm::start_supervisor]
          - recipe[dmon_agent::storm]

  dice.components.storm.Topology:
    derived_from: dice.LogicalNode
    properties:
      monitoring:
        type: dice.types.MonitoringConfig
      application:
        description: >
          Location of topology jar file. If this is relative path, file is
          assumed to be part of the blueprint package. If this URL, file will
          be downloaded.
      topology_name:
        description: >
          Topology name (this name will be seen in Storm UI)
      topology_class:
        description: >
          Class name that contains Storm topology
      arguments:
        description: >
          Arguments that should be passed to topology on submission. Note that
          when jar is executed, first argument is always topology name.
          Arguments in this property are passed as an additional arguments
          after name.
        default: []
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: dice.dice_plugin.tasks.storm.submit_topology
          inputs:
            jar:   { default: { get_property: [ SELF, application    ] } }
            name:  { default: { get_property: [ SELF, topology_name  ] } }
            klass: { default: { get_property: [ SELF, topology_class ] } }
            args:  { default: { get_property: [ SELF, arguments      ] } }
        configure:
          implementation: dice.dice_plugin.tasks.storm.register_topology
          inputs:
            topology_id: { default: { get_attribute: [ SELF, topology_id ] } }
            monitoring:  { default: { get_property:  [ SELF, monitoring  ] } }
          max_retries: 10
          retry_interval: 15
        stop:
          implementation: dice.dice_plugin.tasks.storm.kill_topology
          inputs:
            name: { default: { get_property: [ SELF, topology_name  ] } }

  # Firewall rules
  dice.firewall_rules.storm.Nimbus:
    derived_from: dice.firewall_rules.Base
    properties:
      rules:
        default:
          - remote_ip_prefix: 0.0.0.0/0
            port: 6627
          - remote_ip_prefix: 0.0.0.0/0
            port: 8080
          - remote_ip_prefix: 0.0.0.0/0
            port_range_min: 6700
            port_range_max: 6703
          - remote_ip_prefix: 0.0.0.0/0
            port: 3773
          - remote_ip_prefix: 0.0.0.0/0
            port: 3774

  dice.firewall_rules.storm.Worker:
    derived_from: dice.firewall_rules.Base
    properties:
      rules:
        default:
          - remote_ip_prefix: 0.0.0.0/0
            port_range_min: 6700
            port_range_max: 6703
          - remote_ip_prefix: 0.0.0.0/0
            port: 3773
          - remote_ip_prefix: 0.0.0.0/0
            port: 3774


relationships:

  # This alias has been left here in order not to break public API
  dice.relationships.storm.ConnectedToZookeeperQuorum:
    derived_from: dice.relationships.zookeeper.ConnectedToZookeeperQuorum

  dice.relationships.storm.ConnectedToNimbus:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: dice.dice_plugin.tasks.base.copy_ip_from_target
          inputs:
            property: { default: storm_nimbus_ip }

  dice.relationships.storm.SubmittedBy:
    derived_from: cloudify.relationships.contained_in
    properties:
      connection_type: { default: all_to_one }
