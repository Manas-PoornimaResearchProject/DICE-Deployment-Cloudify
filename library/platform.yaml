data_types:

  dice.datatypes.PlatformConfig:
    description: Configuration for all platform
    properties:
      fco:
        type: dice.datatypes.fco.Config
        required: false


inputs:

  centos_agent_user:
    description: >-
      User that can be used to login to CentOS cloud image (by default, this
      is set to centos, but can be changed if required).
    default: centos

  ubuntu_agent_user:
    description: >-
      User that can be used to login to Ubuntu cloud image (by default, this
      is set to ubuntu, but can be changed if required).
    default: ubuntu

  centos_image_id:
    description: >-
      CentOS image ID that should be used on CentOS instances.

  ubuntu_image_id:
    description: >-
      Ubuntu image ID that should be used on Ubuntu instances.

  small_instance_type:
    description: >-
      Instance type that should be used on small instances.

  small_disk_type:
    description: >-
      Disk type that should be used on small instances.

  medium_instance_type:
    description: >-
      Instance type that should be used on medium instances.

  medium_disk_type:
    description: >-
      Disk type that should be used on medium instances.

  large_instance_type:
    description: >-
      Instance type that should be used on large instances.

  large_disk_type:
    description: >-
      Disk type that should be used on large instances.


node_types:

  dice.firewall_rules.Base:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      rules:
        description: List of firewall rules
        default: []
      platform:
        description: >
          Specifies what platform will host blueprint.
        required: true
      platform_config:
        description: Configuration for underlying platform.
        type: dice.datatypes.PlatformConfig
        required: false
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: dice.dice_plugin.general.create_firewall
          executor: central_deployment_agent
        delete:
          implementation: dice.dice_plugin.general.delete_firewall
          executor: central_deployment_agent
      cloudify.interfaces.validation:
        creation:
          implementation: dice.dice_plugin.general.validate_firewall
          executor: central_deployment_agent

  dice.VirtualIP:
    derived_from: cloudify.nodes.VirtualIP
    properties:
      platform:
        description: >
          Specifies what platform will host blueprint.
        required: true
      platform_config:
        description: Configuration for underlying platform.
        type: dice.datatypes.PlatformConfig
        required: false
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: dice.dice_plugin.general.create_virtual_ip
          executor: central_deployment_agent
        delete:
          implementation: dice.dice_plugin.general.delete_virtual_ip
          executor: central_deployment_agent
      cloudify.interfaces.validation:
        creation:
          implementation: dice.dice_plugin.general.validate_virtual_ip
          executor: central_deployment_agent

  dice.hosts.Custom:
    derived_from: cloudify.nodes.Compute
    properties:
      image:
        description: Cloud image of the operating system.
        required: true
      instance_type:
        description: Instance type that should be used.
        required: true
      disk_type:
        description: Disk type to be used.
        required: true
      platform:
        description: >
          Specifies what platform will host blueprint.
        required: true
      platform_config:
        description: Configuration for underlying platform.
        type: dice.datatypes.PlatformConfig
        required: false
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: dice.dice_plugin.general.create_server
          executor: central_deployment_agent
        start:
          implementation: dice.dice_plugin.general.start_server
          executor: central_deployment_agent
        stop:
          implementation: dice.dice_plugin.general.stop_server
          executor: central_deployment_agent
        delete:
          implementation: dice.dice_plugin.general.delete_server
          executor: central_deployment_agent
      cloudify.interfaces.validation:
        creation:
          implementation: dice.dice_plugin.general.validate_server
          executor: central_deployment_agent

  # CentOS hosts
  dice.hosts.centos.Custom:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      image: { default: { get_input: centos_image_id } }
      agent_config: { default: { user: { get_input: centos_agent_user } } }

  dice.hosts.centos.Small:
    derived_from: dice.hosts.centos.Custom
    properties:
      instance_type: { default: { get_input: small_instance_type } }
      disk_type: { default: { get_input: small_disk_type } }

  dice.hosts.centos.Medium:
    derived_from: dice.hosts.centos.Custom
    properties:
      instance_type: { default: { get_input: medium_instance_type } }
      disk_type: { default: { get_input: medium_disk_type } }

  dice.hosts.centos.Large:
    derived_from: dice.hosts.centos.Custom
    properties:
      instance_type: { default: { get_input: large_instance_type } }
      disk_type: { default: { get_input: large_disk_type } }

  # Ubuntu hosts
  dice.hosts.ubuntu.Custom:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      image: { default: { get_input: ubuntu_image_id } }
      cloudify_agent: { default: { user: { get_input: ubuntu_agent_user } } }

  dice.hosts.ubuntu.Small:
    derived_from: dice.hosts.ubuntu.Custom
    properties:
      instance_type: { default: { get_input: small_instance_type } }
      disk_type: { default: { get_input: small_disk_type } }

  dice.hosts.ubuntu.Medium:
    derived_from: dice.hosts.ubuntu.Custom
    properties:
      instance_type: { default: { get_input: medium_instance_type } }
      disk_type: { default: { get_input: medium_disk_type } }

  dice.hosts.ubuntu.Large:
    derived_from: dice.hosts.ubuntu.Custom
    properties:
      instance_type: { default: { get_input: large_instance_type } }
      disk_type: { default: { get_input: large_disk_type } }


relationships:

  dice.relationships.ProtectedBy:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: dice.dice_plugin.general.apply_firewall
          executor: central_deployment_agent
        unlink:
          implementation: dice.dice_plugin.general.detach_firewall
          executor: central_deployment_agent

  dice.relationships.IPAvailableFrom:
    derived_from: cloudify.relationships.connected_to
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: dice.dice_plugin.general.notify_virtual_ip
          executor: central_deployment_agent
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: dice.dice_plugin.general.connect_virtual_ip
          executor: central_deployment_agent
        unlink:
          implementation: dice.dice_plugin.general.disconnect_virtual_ip
          executor: central_deployment_agent
